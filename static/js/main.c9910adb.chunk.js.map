{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Header","_ref","title","react_default","a","createElement","WrapperHeader","HeaderApps","ChatMessage","_ref2","msg","pos","ChatBubble","BubbleWrapper","App_BubbleChat","BubbleChat","_ref3","BubbleLeft","ChatMsgWrapper","BubbleRight","ButtonChat","_ref4","label","act","ButtonChatLeft","onClick","ButtonLeft","ButtonChatRight","ButtonRight","Footer","FooterWrapper","LinkFooter","href","Pages","styled","div","_templateObject","WindowWrapper","_templateObject2","Content","_templateObject3","ContentWrapper","_templateObject4","_templateObject5","ContentChat","_templateObject6","ContentChatWrapper","_templateObject7","ChatBubbleArea","_templateObject8","ChatBubbleAreaWrapper","_templateObject9","_templateObject10","_templateObject11","_templateObject12","_templateObject13","_templateObject14","ChatActionArea","_templateObject15","ChatActionWrapper","_templateObject16","_templateObject17","button","_templateObject18","TextareaChat","_templateObject19","TextAreaWrapper","_templateObject20","_templateObject21","_templateObject22","h2","_templateObject23","_templateObject24","_templateObject25","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","chatMsg","position","sendLeft","setState","sendRight","sendMsgChat","messages","objectSpread","timestamp","Date","now","concat","updateMsgChat","key","bind","assertThisInitialized","event","preventDefault","dateGet","date","year","getFullYear","month","getMonth","day","getDay","getFullDate","time","hour","getHours","minute","getMinutes","second","getSeconds","getFullTime","msgText","value","chatArea","reset","console","log","_this2","className","App_Header","keys","map","App_ChatMessage","style","width","ref","input","onSubmit","e","sendMsg","App_ButtonChat","height","resize","type","placeholder","required","App_Footer","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"4wHAMA,IAAMA,EAAS,SAAAC,GAAa,IAAXC,EAAWD,EAAXC,MACf,OACEC,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAACC,EAAD,KACEH,EAAAC,EAAAC,cAACE,GAAD,KAAaL,MAMfM,EAAc,SAAAC,GAAgB,IAAdC,EAAcD,EAAdC,IAAKC,EAASF,EAATE,IAQzB,OANER,EAAAC,EAAAC,cAACO,GAAD,KACET,EAAAC,EAAAC,cAACQ,GAAD,KACEV,EAAAC,EAAAC,cAACS,EAAD,CAAYJ,IAAKA,EAAKC,IAAKA,OAO7BI,EAAa,SAAAC,GAAgB,IAAdN,EAAcM,EAAdN,IAWnB,MATU,MAFuBM,EAATL,IAGpBR,EAAAC,EAAAC,cAACY,GAAD,KACEd,EAAAC,EAAAC,cAACa,GAAD,KAAiBR,IAGnBP,EAAAC,EAAAC,cAACc,GAAD,KACEhB,EAAAC,EAAAC,cAACa,GAAD,KAAiBR,KAMnBU,EAAa,SAAAC,GAAuB,IAArBV,EAAqBU,EAArBV,IAAKW,EAAgBD,EAAhBC,MAAOC,EAASF,EAATE,IAW/B,MATU,SAARZ,EACER,EAAAC,EAAAC,cAACmB,GAAD,CAAgBb,IAAKA,EAAKc,QAASF,GACjCpB,EAAAC,EAAAC,cAACqB,GAAD,KAAaJ,IAGfnB,EAAAC,EAAAC,cAACsB,GAAD,CAAiBhB,IAAKA,EAAKc,QAASF,GAClCpB,EAAAC,EAAAC,cAACuB,GAAD,KAAcN,KAMhBO,EAAS,WACb,OACE1B,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAACyB,GAAD,KACE3B,EAAAC,EAAAC,cAAA,uBACU,IACRF,EAAAC,EAAAC,cAAC0B,GAAD,CAAYC,KAAK,sCAAjB,yBAaJC,EAAQC,IAAOC,IAAVC,KAELC,EAAgBH,IAAOC,IAAVG,KAObC,EAAUL,IAAOC,IAAVK,KAEPC,EAAiBP,IAAOC,IAAVO,KAIdpC,EAAgB4B,IAAOC,IAAVQ,KAKbC,EAAcV,IAAOC,IAAVU,KAQXC,EAAqBZ,IAAOC,IAAVY,KAMlBC,EAAiBd,IAAOC,IAAVc,KAOdC,GAAwBhB,IAAOC,IAAVgB,KAOrBvC,GAAasB,IAAOC,IAAViB,KAIVjC,GAAce,IAAOC,IAAVkB,KAQXpC,GAAaiB,IAAOC,IAAVmB,KAQVzC,GAAgBqB,IAAOC,IAAVoB,KASbrC,GAAiBgB,IAAOC,IAAVqB,KAQdC,GAAiBvB,IAAOC,IAAVuB,KAOdC,GAAoBzB,IAAOC,IAAVyB,KAQjBpC,GAAiBU,IAAOC,IAAV0B,KAQdnC,GAAaQ,IAAO4B,OAAVC,KAMVC,GAAe9B,IAAOC,IAAV8B,KAKZC,GAAkBhC,IAAOC,IAAVgC,KAOfxC,GAAkBO,IAAOC,IAAViC,KAQfxC,GAAcM,IAAO4B,OAAVO,KAMX9D,GAAa2B,IAAOoC,GAAVC,KAMVzC,GAAgBI,IAAOC,IAAVqC,KAKbzC,GAAaG,IAAO9B,EAAVqE,KAmJDC,eA3Ib,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAGFI,MAAQ,CACNC,QAAS,GACTC,SAAU,IANET,EA8CdU,SAAW,WACTV,EAAKW,SAAS,CAACF,SAAU,OA/CbT,EAkDdY,UAAY,WACVZ,EAAKW,SAAS,CAACF,SAAU,OAnDbT,EAsDda,YAAc,SAAA9E,GACZ,IAAM+E,EAAQb,OAAAc,EAAA,EAAAd,CAAA,GAAOD,EAAKO,MAAMC,SAC1BQ,EAAYC,KAAKC,MACvBJ,EAAQ,QAAAK,OAASH,IAAejF,EAChCiE,EAAKW,SAAS,CAACH,QAASM,KA1DZd,EA6DdoB,cAAgB,SAACC,EAAKD,GACpB,IAAMN,EAAQb,OAAAc,EAAA,EAAAd,CAAA,GAAOD,EAAKO,MAAMC,SAChCM,EAASO,GAAOD,EAChBpB,EAAKW,SAAS,CAACH,QAASM,KA9DxBd,EAAKa,YAAcb,EAAKa,YAAYS,KAAjBrB,OAAAsB,EAAA,EAAAtB,QAAAsB,EAAA,EAAAtB,CAAAD,KAFPA,uEASNwB,GACNA,EAAMC,iBACN,IAAIC,EAAU,IAAIT,KACZU,EAAO,CACXC,KAAMF,EAAQG,cACdC,MAAOJ,EAAQK,WACfC,IAAKN,EAAQO,SACbC,kBACE,SAAAf,OAAUhB,KAAK6B,IAAf,KAAAb,OAAsBhB,KAAK2B,MAA3B,KAAAX,OAAoChB,KAAKyB,QAIvCO,EAAO,CACXC,KAAMV,EAAQW,WACdC,OAAQZ,EAAQa,aAChBC,OAAQd,EAAQe,aAChBC,kBACE,SAAAvB,OAAUhB,KAAKiC,KAAf,KAAAjB,OAAuBhB,KAAKmC,OAA5B,KAAAnB,OAAsChB,KAAKqC,UAIzCG,EAAU,CACdhB,KAAMA,EAAKO,YACXC,KAAMA,EAAKO,YACX3G,IAAKoE,KAAKK,QAAQoC,MAClB5G,IAAKmE,KAAKI,MAAME,UAGlBN,KAAKU,YAAY8B,GACjBxC,KAAK0C,SAASC,oDAIdC,QAAQC,IAAI,iDAyBL,IAAAC,EAAA9C,KACP,OACE3E,EAAAC,EAAAC,cAAA,OAAKwH,UAAU,OACb1H,EAAAC,EAAAC,cAAC4B,EAAD,KACE9B,EAAAC,EAAAC,cAACgC,EAAD,KACElC,EAAAC,EAAAC,cAACkC,EAAD,KACEpC,EAAAC,EAAAC,cAACoC,EAAD,KACEtC,EAAAC,EAAAC,cAACyH,EAAD,CAAQ5H,MAAM,uBACdC,EAAAC,EAAAC,cAACuC,EAAD,KACEzC,EAAAC,EAAAC,cAACyC,EAAD,KACE3C,EAAAC,EAAAC,cAAC2C,EAAD,KACE7C,EAAAC,EAAAC,cAAC6C,GAAD,KACG0B,OAAOmD,KAAKjD,KAAKI,MAAMC,SAAS6C,IAAI,SAAAhC,GAAG,OACtC7F,EAAAC,EAAAC,cAAC4H,EAAD,CACEjC,IAAKA,EACLtF,IAAKkH,EAAK1C,MAAMC,QAAQa,GAAKtF,IAC7BC,IAAKiH,EAAK1C,MAAMC,QAAQa,GAAKrF,UAKrCR,EAAAC,EAAAC,cAACoD,GAAD,KACEtD,EAAAC,EAAAC,cAAA,QACE6H,MAAO,CAACC,MAAO,QACfC,IAAK,SAAAC,GACHT,EAAKJ,SAAWa,GAElBC,SAAU,SAAAC,GACRX,EAAKY,QAAQD,KAGfpI,EAAAC,EAAAC,cAACsD,GAAD,KACExD,EAAAC,EAAAC,cAACoI,EAAD,CACE9H,IAAK,OACLW,MAAO,YACPC,IAAKuD,KAAKO,WAEZlF,EAAAC,EAAAC,cAAC2D,GAAD,KACE7D,EAAAC,EAAAC,cAAC6D,GAAD,KACE/D,EAAAC,EAAAC,cAAA,YACE6H,MAAO,CACLQ,OAAQ,OACRP,MAAO,MACPQ,OAAQ,QAEVP,IAAK,SAAAC,GAAK,OAAKT,EAAKzC,QAAUkD,GAC9BO,KAAK,OACLC,YAAY,eACZC,SAAS,eAIf3I,EAAAC,EAAAC,cAACoI,EAAD,CACE9H,IAAK,QACLW,MAAO,aACPC,IAAKuD,KAAKS,iBAOtBpF,EAAAC,EAAAC,cAAC0I,EAAD,kBAlIEC,aC5NZC,GAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,GAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB9E,QACfwE,UAAUC,cAAcQ,YAI1BzC,QAAQC,IACN,iHAKE8B,GAAUA,EAAOW,UACnBX,EAAOW,SAASN,KAMlBpC,QAAQC,IAAI,sCAGR8B,GAAUA,EAAOY,WACnBZ,EAAOY,UAAUP,UAO5BQ,MAAM,SAAAC,GACL7C,QAAQ6C,MAAM,4CAA6CA,KC1FjEC,IAASC,OAAOtK,EAAAC,EAAAC,cAACqK,GAAD,MAASC,SAASC,eAAe,SDgB1C,SAAkBnB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAImB,IAAIC,gBAAwB3B,OAAOC,SAASpH,MACpD+I,SAAW5B,OAAOC,SAAS2B,OAIvC,OAGF5B,OAAO6B,iBAAiB,OAAQ,WAC9B,IAAMxB,EAAK,GAAA1D,OAAMgF,gBAAN,sBAEP7B,IAgEV,SAAiCO,EAAOC,GAEtCwB,MAAMzB,GACHK,KAAK,SAAAqB,GAEJ,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAASI,QACO,MAAfH,IAA8D,IAAvCA,EAAYI,QAAQ,cAG5C7B,UAAUC,cAAc6B,MAAM3B,KAAK,SAAAC,GACjCA,EAAa2B,aAAa5B,KAAK,WAC7BV,OAAOC,SAASsC,aAKpBnC,GAAgBC,EAAOC,KAG1Ba,MAAM,WACL5C,QAAQC,IACN,mEArFAgE,CAAwBnC,EAAOC,GAI/BC,UAAUC,cAAc6B,MAAM3B,KAAK,WACjCnC,QAAQC,IACN,gHAMJ4B,GAAgBC,EAAOC,MCjC/BE","file":"static/js/main.c9910adb.chunk.js","sourcesContent":["import React, {Component} from \"react\";\nimport styled from \"styled-components\";\nimport \"./App.css\";\n// import data from \"./sample_chat\";\n\n/* Stateless Component */\nconst Header = ({title}) => {\n  return (\n    <header>\n      <WrapperHeader>\n        <HeaderApps>{title}</HeaderApps>\n      </WrapperHeader>\n    </header>\n  );\n};\n\nconst ChatMessage = ({msg, pos}) => {\n  let msgComponent = (\n    <ChatBubble>\n      <BubbleWrapper>\n        <BubbleChat msg={msg} pos={pos} />\n      </BubbleWrapper>\n    </ChatBubble>\n  );\n  return msgComponent;\n};\n\nconst BubbleChat = ({msg, pos}) => {\n  let BubblePos =\n    pos === \"l\" ? (\n      <BubbleLeft>\n        <ChatMsgWrapper>{msg}</ChatMsgWrapper>\n      </BubbleLeft>\n    ) : (\n      <BubbleRight>\n        <ChatMsgWrapper>{msg}</ChatMsgWrapper>\n      </BubbleRight>\n    );\n  return BubblePos;\n};\n\nconst ButtonChat = ({pos, label, act}) => {\n  let ButtonGen =\n    pos === \"left\" ? (\n      <ButtonChatLeft pos={pos} onClick={act}>\n        <ButtonLeft>{label}</ButtonLeft>\n      </ButtonChatLeft>\n    ) : (\n      <ButtonChatRight pos={pos} onClick={act}>\n        <ButtonRight>{label}</ButtonRight>\n      </ButtonChatRight>\n    );\n  return ButtonGen;\n};\n\nconst Footer = () => {\n  return (\n    <footer>\n      <FooterWrapper>\n        <small>\n          Apps By{\" \"}\n          <LinkFooter href=\"https://consciousnessdev.github.io\">\n            Consciousness Dev\n          </LinkFooter>\n        </small>\n      </FooterWrapper>\n    </footer>\n  );\n};\n\n/* Functional Components */\n\n/* Styled Components */\n\nconst Pages = styled.div``;\n\nconst WindowWrapper = styled.div`\n  margin: 0 auto;\n  width: 60%;\n  background-color: #efefef;\n  border-radius: 5px;\n`;\n\nconst Content = styled.div``;\n\nconst ContentWrapper = styled.div`\n  margin: 10px;\n`;\n\nconst WrapperHeader = styled.div`\n  padding-top: 10px;\n  padding-bottom: 10px;\n`;\n\nconst ContentChat = styled.div`\n  background-color: lightblue;\n  width: 80%;\n  margin: 0 auto;\n  border-radius: 5px;\n  padding: 20px;\n`;\n\nconst ContentChatWrapper = styled.div`\n  height: 400px;\n  padding: 10px;\n  overflow: hidden;\n`;\n\nconst ChatBubbleArea = styled.div`\n  height: 75%;\n  background-color: #fff;\n  border-radius: 5px;\n  border: 1px solid #efefef;\n`;\n\nconst ChatBubbleAreaWrapper = styled.div`\n  height: 100%;\n  display: grid;\n  align-content: start;\n  overflow: auto;\n`;\n\nconst ChatBubble = styled.div`\n  margin: 5px 0;\n`;\n\nconst BubbleRight = styled.div`\n  grid-column: 2;\n  background-color: lightsalmon;\n  border-radius: 5px;\n  width: 90%;\n  margin: 0 auto;\n`;\n\nconst BubbleLeft = styled.div`\n  grid-column: 1;\n  background-color: lightgreen;\n  border-radius: 5px;\n  width: 90%;\n  margin: 0 auto;\n`;\n\nconst BubbleWrapper = styled.div`\n  width: 100%;\n  position: relative;\n  display: grid;\n  grid-gap: 20px;\n  grid-template-columns: repeat(2, 1fr);\n  grid-auto-rows: minmax(50px, auto);\n`;\n\nconst ChatMsgWrapper = styled.div`\n  height: 100%;\n  width: auto;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ChatActionArea = styled.div`\n  height: 25%;\n  width: auto;\n  display: flex;\n  align-items: center;\n`;\n\nconst ChatActionWrapper = styled.div`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  width: 100%;\n  height: 60px;\n`;\n\nconst ButtonChatLeft = styled.div`\n  width: 20%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst ButtonLeft = styled.button`\n  cursor: pointer;\n  height: 100%;\n  width: 100%;\n`;\n\nconst TextareaChat = styled.div`\n  width: 60%;\n  height: 100%;\n`;\n\nconst TextAreaWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n`;\n\nconst ButtonChatRight = styled.div`\n  width: 20%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst ButtonRight = styled.button`\n  cursor: pointer;\n  height: 100%;\n  width: 100%;\n`;\n\nconst HeaderApps = styled.h2`\n  margin: 0;\n  text-align: center;\n  color: #6a6d7e;\n`;\n\nconst FooterWrapper = styled.div`\n  padding-top: 10px;\n  padding-bottom: 10px;\n`;\n\nconst LinkFooter = styled.a`\n  text-decoration: none;\n  color: #0097e2;\n  font-weight: bold;\n  cursor: pointer;\n`;\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.sendMsgChat = this.sendMsgChat.bind(this);\n  }\n  state = {\n    chatMsg: {},\n    position: \"\"\n  };\n\n  sendMsg(event) {\n    event.preventDefault();\n    let dateGet = new Date();\n    const date = {\n      year: dateGet.getFullYear(),\n      month: dateGet.getMonth(),\n      day: dateGet.getDay(),\n      get getFullDate() {\n        return `${this.day}-${this.month}-${this.year}`;\n      }\n    };\n\n    const time = {\n      hour: dateGet.getHours(),\n      minute: dateGet.getMinutes(),\n      second: dateGet.getSeconds(),\n      get getFullTime() {\n        return `${this.hour}:${this.minute}:${this.second}`;\n      }\n    };\n\n    const msgText = {\n      date: date.getFullDate,\n      time: time.getFullTime,\n      msg: this.chatMsg.value,\n      pos: this.state.position\n    };\n\n    this.sendMsgChat(msgText);\n    this.chatArea.reset();\n  }\n\n  componentDidMount() {\n    console.log(\"Apps dimulai\");\n  }\n\n  // sendLeft = (side, msg) => {};\n  sendLeft = () => {\n    this.setState({position: \"l\"});\n  };\n\n  sendRight = () => {\n    this.setState({position: \"r\"});\n  };\n\n  sendMsgChat = msg => {\n    const messages = {...this.state.chatMsg};\n    const timestamp = Date.now();\n    messages[`chat-${timestamp}`] = msg;\n    this.setState({chatMsg: messages});\n  };\n\n  updateMsgChat = (key, updateMsgChat) => {\n    const messages = {...this.state.chatMsg};\n    messages[key] = updateMsgChat;\n    this.setState({chatMsg: messages});\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Pages>\n          <WindowWrapper>\n            <Content>\n              <ContentWrapper>\n                <Header title=\"SelfChat Apps v0.1\" />\n                <ContentChat>\n                  <ContentChatWrapper>\n                    <ChatBubbleArea>\n                      <ChatBubbleAreaWrapper>\n                        {Object.keys(this.state.chatMsg).map(key => (\n                          <ChatMessage\n                            key={key}\n                            msg={this.state.chatMsg[key].msg}\n                            pos={this.state.chatMsg[key].pos}\n                          />\n                        ))}\n                      </ChatBubbleAreaWrapper>\n                    </ChatBubbleArea>\n                    <ChatActionArea>\n                      <form\n                        style={{width: \"100%\"}}\n                        ref={input => {\n                          this.chatArea = input;\n                        }}\n                        onSubmit={e => {\n                          this.sendMsg(e);\n                        }}\n                      >\n                        <ChatActionWrapper>\n                          <ButtonChat\n                            pos={\"left\"}\n                            label={\"Send Left\"}\n                            act={this.sendLeft}\n                          />\n                          <TextareaChat>\n                            <TextAreaWrapper>\n                              <textarea\n                                style={{\n                                  height: \"100%\",\n                                  width: \"95%\",\n                                  resize: \"none\"\n                                }}\n                                ref={input => (this.chatMsg = input)}\n                                type=\"text\"\n                                placeholder=\"Fill message\"\n                                required=\"required\"\n                              />\n                            </TextAreaWrapper>\n                          </TextareaChat>\n                          <ButtonChat\n                            pos={\"right\"}\n                            label={\"Send Right\"}\n                            act={this.sendRight}\n                          />\n                        </ChatActionWrapper>\n                      </form>\n                    </ChatActionArea>\n                  </ContentChatWrapper>\n                </ContentChat>\n                <Footer />\n              </ContentWrapper>\n            </Content>\n          </WindowWrapper>\n        </Pages>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nif (module.hot) {\n  module.hot.accept();\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n\nserviceWorker.register();\n"],"sourceRoot":""}